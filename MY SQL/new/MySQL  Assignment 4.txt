1] - write a procedure to insert record into employee table.
the procedure should accept empno, ename, sal, job, hiredate as input parameter
write insert statement inside procedure insert_rec to add one record into table.
Ans - 
delimiter $$
create procedure insert_rec(peno int , penm varchar(20) , psal decimal(9,2) , pjob varchar(20) , phdate date)
begin
insert into emp(empno ,ename ,sal, job, hiredate) values(peno,penm , psal ,pjob,phdate);
end$$
delimiter ; 
Query OK, 0 rows affected (0.05 sec)

mysql> delimiter ;

mysql> call insert_rec(5000,'RAMA',35000,'Project','2021-01-05');
Query OK, 1 row affected (0.00 sec)

mysql> select * from emp;
+-------+--------+----------+------+------------+----------+------------+--------+--------+
| EMPNO | ENAME  | JOB      | MGR  | HIREDATE   | SAL      | net_salary | COMM   | DEPTNO |
+-------+--------+----------+------+------------+----------+------------+--------+--------+
|   101 | NULL   | NULL     | NULL | NULL       |     NULL |       1000 |   NULL |   NULL |
|   102 | NULL   | NULL     | NULL | NULL       |     NULL |       1000 |   NULL |   NULL |
|  5000 | RAMA   | Project  | NULL | 2021-01-05 | 35000.00 |       1000 |   NULL |   NULL |
|  7300 | RIMA   | PURCHAse | NULL | NULL       |     NULL |       1000 |   NULL |   NULL |
|  7369 | SMITH  | S-clerk  | 7902 | 1980-12-17 |   800.00 |       1000 |   NULL |     20 |
|  7400 | RAMA   | Sales    | NULL | NULL       |     NULL |       1000 |   NULL |   NULL |
|  7499 | ALLEN  | salesman | 7698 | 1981-02-18 |  1495.00 |       1000 | 300.00 |     30 |
|  7500 | Killer | Jugad    | NULL | NULL       |     NULL |       1000 |   NULL |   NULL |
|  7521 | ward   | salesman | 7698 | 1981-02-22 |  1495.00 |       1000 | 500.00 |     30 |
|  7566 | JONES  | MANAGER  | 7839 | 1981-04-02 |  2975.00 |       1000 |   NULL |     20 |
|  7782 | CLARK  | manager  | 7777 | 1981-06-09 |  2817.50 |       1000 |   NULL |     10 |
|  7788 | SCOTT  | ANALYST  | 7566 | 1982-12-09 |     NULL |       1000 |   NULL |     20 |
|  7839 | KING   | manager  | 7777 | 1981-11-17 |  5750.00 |       1000 |   NULL |     10 |
|  7876 | ADAMS  | CLERK    | 7788 | 1983-01-12 |  1100.00 |       1000 |   NULL |     20 |
|  7902 | FORD   | ANALYST  | 7566 | 1981-12-03 |  3600.00 |       1000 |   NULL |     20 |
|  7934 | MILLER | manager  | 7777 | 1982-01-23 |  1495.00 |       1000 |   NULL |     10 |
+-------+--------+----------+------+------------+----------+------------+--------+--------+
16 rows in set (0.00 sec)


2] - write a procedure to delete record from employee table.
the procedure should accept empno as input parameter.
write delete statement inside procedure delete_emp to delete one record from emp table.
Ans -
mysql> delimiter $$
mysql> create procedure delete_info(peno int)
    -> begin
    -> delete from emp where empno=peno;
    -> end$$
Query OK, 0 rows affected (0.04 sec)

mysql> delimiter ;
mysql> call delete_info(5000);
Query OK, 1 row affected (0.00 sec)

mysql> select* from emp;
+-------+--------+----------+------+------------+---------+------------+--------+--------+
| EMPNO | ENAME  | JOB      | MGR  | HIREDATE   | SAL     | net_salary | COMM   | DEPTNO |
+-------+--------+----------+------+------------+---------+------------+--------+--------+
|   101 | NULL   | NULL     | NULL | NULL       |    NULL |       1000 |   NULL |   NULL |
|   102 | NULL   | NULL     | NULL | NULL       |    NULL |       1000 |   NULL |   NULL |
|  7300 | RIMA   | PURCHAse | NULL | NULL       |    NULL |       1000 |   NULL |   NULL |
|  7369 | SMITH  | S-clerk  | 7902 | 1980-12-17 |  800.00 |       1000 |   NULL |     20 |
|  7400 | RAMA   | Sales    | NULL | NULL       |    NULL |       1000 |   NULL |   NULL |
|  7499 | ALLEN  | salesman | 7698 | 1981-02-18 | 1495.00 |       1000 | 300.00 |     30 |
|  7500 | Killer | Jugad    | NULL | NULL       |    NULL |       1000 |   NULL |   NULL |
|  7521 | ward   | salesman | 7698 | 1981-02-22 | 1495.00 |       1000 | 500.00 |     30 |
|  7566 | JONES  | MANAGER  | 7839 | 1981-04-02 | 2975.00 |       1000 |   NULL |     20 |
|  7782 | CLARK  | manager  | 7777 | 1981-06-09 | 2817.50 |       1000 |   NULL |     10 |
|  7788 | SCOTT  | ANALYST  | 7566 | 1982-12-09 |    NULL |       1000 |   NULL |     20 |
|  7839 | KING   | manager  | 7777 | 1981-11-17 | 5750.00 |       1000 |   NULL |     10 |
|  7876 | ADAMS  | CLERK    | 7788 | 1983-01-12 | 1100.00 |       1000 |   NULL |     20 |
|  7902 | FORD   | ANALYST  | 7566 | 1981-12-03 | 3600.00 |       1000 |   NULL |     20 |
|  7934 | MILLER | manager  | 7777 | 1982-01-23 | 1495.00 |       1000 |   NULL |     10 |
+-------+--------+----------+------+------------+---------+------------+--------+--------+
15 rows in set (0.00 sec)

3] - write a procedure to display empno,ename,deptno,dname for all employees with sal > given salary. 
pass salary as a parameter to procedure
Ans - 
mysql> delimiter $$
mysql> create procedure emp_info(psal decimal(9,2))
    -> begin
    -> select e.empno , e.ename , e.deptno,d.dname  from emp e , dept d
    -> where e.deptno=d.deptno and sal>psal;
    -> end$$
Query OK, 0 rows affected (0.07 sec)

mysql> delimiter ;
mysql> call emp_info(1500);
+-------+-------+--------+------------+
| empno | ename | deptno | dname      |
+-------+-------+--------+------------+
|  7566 | JONES |     20 | RESEARCH   |
|  7782 | CLARK |     10 | ACCOUNTING |
|  7839 | KING  |     10 | ACCOUNTING |
|  7902 | FORD  |     20 | RESEARCH   |
+-------+-------+--------+------------+
4 rows in set (0.00 sec)

Query OK, 0 rows affected (0.01 sec)

4] - write a procedure to find min,max,avg of salary and number of employees in the given deptno.
deptno --→ in parameter .....min,max,avg and count ---→ out type parameter
execute procedure and then display values min,max,avg and count
Ans - 
delimiter $$
create procedure display_info(pdno int , out pmin decimal(9,2) , out pmax decimal(9,2) , out pavg decimal(9,2), out pcount int)
begin
select min(sal) , max(sal) ,avg(sal) ,count(*)  into pmin, pmax,pavg,pcount from emp
where deptno=pdno;
end$$
delimiter ;
Query OK, 0 rows affected (0.19 sec)

mysql> call display_info(30 ,@mn,@mx,@a,@c);
Query OK, 1 row affected, 1 warning (0.03 sec)

mysql> select @mn Minimum_sal,@mx Maximum_sal,@a Avg_sal,@c Count;
+-------------+-------------+---------+-------+
| Minimum_sal | Maximum_sal | Avg_sal | Count |
+-------------+-------------+---------+-------+
|      950.00 |     2850.00 | 1566.67 |     6 |
+-------------+-------------+---------+-------+
1 row in set (0.00 sec)

5] - write a procedure to display all pid,pname,cid,cname and salesman name(use product,category and salesman table)
Ans - 

7] - Write a procedure that displays the following information of all emp Empno,Name,job,Salary,Status,deptno 
Note: - Status will be (Greater, Lesser or Equal) respective to average salary of their own
department. Display an error message Emp table is empty if there is no matching record.
Ans - 
mysql> delimiter $$
mysql> create procedure emp_info()
    -> begin
    -> declare peno int ;
    -> declare penm varchar(20);
    -> declare pavgsal decimal(9,2);
    -> declare pjob varchar(20);
    -> declare psal decimal(9,2);
    -> declare pstatus varchar(20);
    -> declare pdno int;
    -> declare pstop int default 0;
    -> declare empcur cursor for select empno , ename , job, sal , deptno from emp;
    -> declare continue handler  for not found set pstop =1;
    -> open empcur;
    -> lable:loop
    -> fetch empcur into peno , penm , pjob ,psal , pdno;
    -> if pstop=1 then
    -> leave lable ;
    -> end if;
    -> select avg(sal) into pavgsal from emp
    -> where deptno=pdno;
    -> if psal>pavgsal then
    -> set pstatus ='Greter';
    -> elseif psal<pavgsal then
    -> set pstatus='lesser';
    -> else
    -> set pstatus='equal';
    -> end if ;
    -> select peno, penm , psal , pdno,pstatus;
    -> set pstatus=' ' ;
    -> end loop;
    -> close empcur;
    -> end$$
Query OK, 0 rows affected (0.13 sec)
mysql> call emp_info();
    -> $$
+------+-------+--------+------+---------+
| peno | penm  | psal   | pdno | pstatus |
+------+-------+--------+------+---------+
| 7369 | SMITH | 800.00 |   20 | lesser  |
+------+-------+--------+------+---------+
1 row in set (0.00 sec)

+------+-------+---------+------+---------+
| peno | penm  | psal    | pdno | pstatus |
+------+-------+---------+------+---------+
| 7499 | ALLEN | 1600.00 |   30 | Greter  |
+------+-------+---------+------+---------+
1 row in set (0.01 sec)

+------+------+---------+------+---------+
| peno | penm | psal    | pdno | pstatus |
+------+------+---------+------+---------+
| 7521 | WARD | 1250.00 |   30 | lesser  |
+------+------+---------+------+---------+
1 row in set (0.01 sec)

+------+-------+---------+------+---------+
| peno | penm  | psal    | pdno | pstatus |
+------+-------+---------+------+---------+
| 7566 | JONES | 2975.00 |   20 | Greter  |
+------+-------+---------+------+---------+
1 row in set (0.02 sec)

+------+--------+---------+------+---------+
| peno | penm   | psal    | pdno | pstatus |
+------+--------+---------+------+---------+
| 7654 | MARTIN | 1250.00 |   30 | lesser  |
+------+--------+---------+------+---------+
1 row in set (0.04 sec)

+------+-------+---------+------+---------+
| peno | penm  | psal    | pdno | pstatus |
+------+-------+---------+------+---------+
| 7698 | BLAKE | 2850.00 |   30 | Greter  |
+------+-------+---------+------+---------+
1 row in set (0.05 sec)

+------+-------+---------+------+---------+
| peno | penm  | psal    | pdno | pstatus |
+------+-------+---------+------+---------+
| 7782 | CLARK | 2450.00 |   10 | lesser  |
+------+-------+---------+------+---------+
1 row in set (0.06 sec)

+------+-------+---------+------+---------+
| peno | penm  | psal    | pdno | pstatus |
+------+-------+---------+------+---------+
| 7788 | SCOTT | 3000.00 |   20 | Greter  |
+------+-------+---------+------+---------+
1 row in set (0.07 sec)

+------+------+---------+------+---------+
| peno | penm | psal    | pdno | pstatus |
+------+------+---------+------+---------+
| 7839 | KING | 5000.00 |   10 | Greter  |
+------+------+---------+------+---------+
1 row in set (0.09 sec)

+------+--------+---------+------+---------+
| peno | penm   | psal    | pdno | pstatus |
+------+--------+---------+------+---------+
| 7844 | TURNER | 1500.00 |   30 | lesser  |
+------+--------+---------+------+---------+
1 row in set (0.09 sec)

+------+-------+---------+------+---------+
| peno | penm  | psal    | pdno | pstatus |
+------+-------+---------+------+---------+
| 7876 | ADAMS | 1100.00 |   20 | lesser  |
+------+-------+---------+------+---------+
1 row in set (0.11 sec)

+------+-------+--------+------+---------+
| peno | penm  | psal   | pdno | pstatus |
+------+-------+--------+------+---------+
| 7900 | JAMES | 950.00 |   30 | lesser  |
+------+-------+--------+------+---------+
1 row in set (0.12 sec)

+------+------+---------+------+---------+
| peno | penm | psal    | pdno | pstatus |
+------+------+---------+------+---------+
| 7902 | FORD | 3000.00 |   20 | Greter  |
+------+------+---------+------+---------+
1 row in set (0.13 sec)

+------+--------+---------+------+---------+
| peno | penm   | psal    | pdno | pstatus |
+------+--------+---------+------+---------+
| 7934 | MILLER | 1300.00 |   10 | lesser  |
+------+--------+---------+------+---------+
1 row in set (0.14 sec)

Query OK, 0 rows affected (0.15 sec)

8] - Write a procedure to update salary in emp table based on following rules.
Exp< =35 then no Update ,Exp> 35 and <=38 then 20% of salary ,Exp> 38 then 25% of salary
Ans - 

mysql> delimiter $$
mysql> create procedure update_sal()
    -> begin
    -> declare sstop int default 0;
    -> declare pename varchar(20);
    -> declare peno int;
    -> declare phiredate date;
    -> declare  exp int;
    -> declare pjob varchar(20);
    -> declare psal decimal(9,2);
    -> declare salcur cursor for select empno,ename,sal,job,floor(datediff(curdate(),hiredate)/365)from emp;
    -> declare continue handler for not found set sstop=1;
    -> open salcur;
    -> l1:loop
    -> fetch salcur into peno,pename,psal,pjob,exp;
    -> if sstop=1 then
    -> leave l1;
    -> end if;
    -> if exp<=35 then
    -> update emp
    -> set sal=psal
    -> where empno=peno;
    -> elseif exp between 36 and 38 then
    -> update emp
    -> set sal=psal*1.2
    -> where empno=peno;
    -> elseif exp>38 then
    -> update emp
    -> set sal=psal*1.25
    -> where empno=peno;
    -> end if;
    -> end loop;
    -> close salcur;
    -> end$$
Query OK, 0 rows affected (0.26 sec)

mysql> call update_sal();
    -> $$
Query OK, 0 rows affected (0.71 sec)

mysql> select * from emp;
    -> $$
+-------+--------+-----------+------+------------+---------+---------+--------+
| EMPNO | ENAME  | JOB       | MGR  | HIREDATE   | SAL     | COMM    | DEPTNO |
+-------+--------+-----------+------+------------+---------+---------+--------+
|  7369 | SMITH  | CLERK     | 7902 | 1980-12-17 | 1000.00 |    NULL |     20 |
|  7499 | ALLEN  | SALESMAN  | 7698 | 1981-02-20 | 2000.00 |  300.00 |     30 |
|  7521 | WARD   | SALESMAN  | 7698 | 1981-02-22 | 1562.50 |  500.00 |     30 |
|  7566 | JONES  | MANAGER   | 7839 | 1981-04-02 | 3718.75 |    NULL |     20 |
|  7654 | MARTIN | SALESMAN  | 7698 | 1981-09-28 | 1562.50 | 1400.00 |     30 |
|  7698 | BLAKE  | MANAGER   | 7839 | 1981-05-01 | 3562.50 |    NULL |     30 |
|  7782 | CLARK  | MANAGER   | 7839 | 1981-06-09 | 3062.50 |    NULL |     10 |
|  7788 | SCOTT  | ANALYST   | 7566 | 1982-12-09 | 3750.00 |    NULL |     20 |
|  7839 | KING   | PRESIDENT | NULL | 1981-11-17 | 6250.00 |    NULL |     10 |
|  7844 | TURNER | SALESMAN  | 7698 | 1981-09-08 | 1875.00 |    0.00 |     30 |
|  7876 | ADAMS  | CLERK     | 7788 | 1983-01-12 | 1375.00 |    NULL |     20 |
|  7900 | JAMES  | CLERK     | 7698 | 1981-12-03 | 1187.50 |    NULL |     30 |
|  7902 | FORD   | ANALYST   | 7566 | 1981-12-03 | 3750.00 |    NULL |     20 |
|  7934 | MILLER | CLERK     | 7782 | 1982-01-23 | 1625.00 |    NULL |     10 |
+-------+--------+-----------+------+------------+---------+---------+--------+
14 rows in set (0.00 sec)

10] - Write a function to compute the following. Function should take sal and hiredate
as i/p and return the cost to company. DA = 15% Salary, HRA= 20% of Salary, TA= 8% of Salary.
Special Allowance will be decided based on the service in the company.
< 1 Year Nil >=1 Year< 2 Year 10% of Salary >=2 Year< 4 Year 20% of Salary >4 Year 30% of Salary
Ans - 
delimiter &&
create function ctc(sal decimal(9,0),hiredate datetime) returns int
begin 
declare cost decimal(9,2) default 0;
declare spAllo decimal(9,2) ;
declare exp int ;
set exp=floor(datediff(curdate(),hiredate)/365);
if exp<1 then
set spAllo=0;
elseif exp>=1 and exp<2 then 
set spAllo=0.1*sal;
elseif exp>=2 and exp<4 then
set spAllo=0.2*sal;
else 
set spAllo=0.3*sal;
end if;
set cost=0.43*sal+sal+spAllo;
return cost;
end&&
delimiter ;
Query OK, 0 rows affected (0.31 sec)

mysql> select empno EMP_NO,ename NAME,sal Base_sal ,ctc(sal,hiredate) COST_TO_COMPANY from emp where empno=7369;
+--------+-------+----------+-----------------+
| EMP_NO | NAME  | Base_sal | COST_TO_COMPANY |
+--------+-------+----------+-----------------+
|   7369 | SMITH |  1000.00 |            1730 |
+--------+-------+----------+-----------------+
1 row in set (0.00 sec)


11] - Write query to display empno,ename,sal,cost to company for all employees(note:use function written in question 10)
Ans - 

mysql> select empno EMP_NO,ename NAME,sal Base_sal ,ctc(sal,hiredate) COST_TO_COMPANY from emp e
    -> where empno =(select empno from emp m where m.empno=e.empno);
+--------+--------+----------+-----------------+
| EMP_NO | NAME   | Base_sal | COST_TO_COMPANY |
+--------+--------+----------+-----------------+
|   7369 | SMITH  |  1000.00 |            1730 |
|   7499 | ALLEN  |  2000.00 |            3460 |
|   7521 | WARD   |  1562.50 |            2704 |
|   7566 | JONES  |  3718.75 |            6434 |
|   7654 | MARTIN |  1562.50 |            2704 |
|   7698 | BLAKE  |  3562.50 |            6164 |
|   7782 | CLARK  |  3062.50 |            5299 |
|   7788 | SCOTT  |  3750.00 |            6488 |
|   7839 | KING   |  6250.00 |           10813 |
|   7844 | TURNER |  1875.00 |            3244 |
|   7876 | ADAMS  |  1375.00 |            2379 |
|   7900 | JAMES  |  1187.50 |            2055 |
|   7902 | FORD   |  3750.00 |            6488 |
|   7934 | MILLER |  1625.00 |            2811 |
+--------+--------+----------+-----------------+
14 rows in set, 6 warnings (0.07 sec)

Q2. Write trigger

1]-WAT to store the old salary details in Emp_Back(Emp_Back has the same structure as emp table without any constraint)table.
Ans - 
mysql> create table emp_back(empno int,ename varchar(20),oldsal decimal(9,2),newsal decimal(9,2));
Query OK, 0 rows affected (1.06 sec)

mysql> desc emp_back;
+--------+--------------+------+-----+---------+-------+
| Field  | Type         | Null | Key | Default | Extra |
+--------+--------------+------+-----+---------+-------+
| empno  | int          | YES  |     | NULL    |       |
| ename  | varchar(20)  | YES  |     | NULL    |       |
| oldsal | decimal(9,2) | YES  |     | NULL    |       |
| newsal | decimal(9,2) | YES  |     | NULL    |       |
+--------+--------------+------+-----+---------+-------+
4 rows in set (0.20 sec)

mysql> delimiter &&
mysql> create trigger emp_trig after update on emp for each row
    -> begin
    -> insert into emp_back(empno,ename,oldsal,newsal) values(OLD.empno,OLD.ename,OLD.sal,NEW.sal);
    -> end&&
Query OK, 0 rows affected (0.56 sec)

mysql> delimiter ;
mysql> call update_sal;
Query OK, 0 rows affected (1.35 sec)

mysql> select* from emp_back;
+-------+--------+---------+---------+
| empno | ename  | oldsal  | newsal  |
+-------+--------+---------+---------+
|  7369 | SMITH  | 1000.00 | 1250.00 |
|  7499 | ALLEN  | 2000.00 | 2500.00 |
|  7521 | WARD   | 1562.50 | 1953.13 |
|  7566 | JONES  | 3718.75 | 4648.44 |
|  7654 | MARTIN | 1562.50 | 1953.13 |
|  7698 | BLAKE  | 3562.50 | 4453.13 |
|  7782 | CLARK  | 3062.50 | 3828.13 |
|  7788 | SCOTT  | 3750.00 | 4687.50 |
|  7839 | KING   | 6250.00 | 7812.50 |
|  7844 | TURNER | 1875.00 | 2343.75 |
|  7876 | ADAMS  | 1375.00 | 1718.75 |
|  7900 | JAMES  | 1187.50 | 1484.38 |
|  7902 | FORD   | 3750.00 | 4687.50 |
|  7934 | MILLER | 1625.00 | 2031.25 |
+-------+--------+---------+---------+
14 rows in set (0.00 sec)


2] - Write a trigger which add entry in audit table when user tries to insert or delete records in employee table 
store empno,name,username and date on which operation performed and which action is done insert or delete. in emp_audit table.
Ans - 
mysql> create table emp_audit(empno int,ename varchar(20),username varchar(20), chdate date,action varchar(20));
Query OK, 0 rows affected (0.34 sec)

mysql> desc emp_audit;
+----------+-------------+------+-----+---------+-------+
| Field    | Type        | Null | Key | Default | Extra |
+----------+-------------+------+-----+---------+-------+
| empno    | int         | YES  |     | NULL    |       |
| ename    | varchar(20) | YES  |     | NULL    |       |
| username | varchar(20) | YES  |     | NULL    |       |
| chdate   | date        | YES  |     | NULL    |       |
| action   | varchar(20) | YES  |     | NULL    |       |
+----------+-------------+------+-----+---------+-------+
5 rows in set (0.10 sec)

delimiter &&
create trigger emp_audit_trig after insert on emp for each row
begin 
insert into emp_audit values(NEW.empno,NEW.ename,current_user(),now(),'After Insert');
end&&
Query OK, 0 rows affected (0.20 sec)
mysql> delimiter ;

delimiter &&
create trigger emp_audit_delete before delete on emp for each row
begin
insert into emp_audit values(OLD.empno,OLD.ename,current_user(),now(),'Before delete');
end&&
delimiter ;

mysql> insert into emp values(123,'RAM','PURCHASE',5555,'2021-01-05',25000,0,10);
Query OK, 1 row affected (0.12 sec)

mysql> delete from emp where empno=123;
Query OK, 1 row affected (0.12 sec)

mysql> select* from emp_audit;
+-------+-------+----------------+------------+---------------+
| empno | ename | username       | chdate     | action        |
+-------+-------+----------------+------------+---------------+
|   123 | RAM   | root@localhost | 2022-10-13 | After Insert  |
|   123 | RAM   | root@localhost | 2022-10-13 | Before delete |
|   123 | RAM   | root@localhost | 2022-10-13 | After Insert  |
|   123 | RAM   | root@localhost | 2022-10-13 | Before delete |
+-------+-------+----------------+------------+---------------+
4 rows in set (0.00 sec)

3] - Create table vehicle_history. Write a trigger to store old vehicleprice and new vehicle price in history table 
before you update price in vehicle table
Ans - 
mysql> create table vehicle_history(vid int,vname varchar(20),old_price decimal(9,2),new_price decimal(9,2),chdate date,user varchar(20));
Query OK, 0 rows affected (0.77 sec)

mysql> desc vehicle_history;
+-----------+--------------+------+-----+---------+-------+
| Field     | Type         | Null | Key | Default | Extra |
+-----------+--------------+------+-----+---------+-------+
| vid       | int          | YES  |     | NULL    |       |
| vname     | varchar(20)  | YES  |     | NULL    |       |
| old_price | decimal(9,2) | YES  |     | NULL    |       |
| new_price | decimal(9,2) | YES  |     | NULL    |       |
| chdate    | date         | YES  |     | NULL    |       |
| user      | varchar(20)  | YES  |     | NULL    |       |
+-----------+--------------+------+-----+---------+-------+
6 rows in set (0.06 sec)

mysql> delimiter &&
mysql> create trigger vehicle_price_hist after update on vehicle for each row
    -> begin
    -> insert into vehicle_history values(OLD.vid,OLD.vname,OLD.price,NEW.price,now(),current_user());
    -> end&&
Query OK, 0 rows affected (0.12 sec)

mysql> delimiter ;

mysql> select* from vehicle;
+------+-----------+--------+-----------+---------+
| vid  | vname     | city   | price     | regfee  |
+------+-----------+--------+-----------+---------+
|    1 | Hero      | Pune   |  49500.00 |  495.00 |
|    2 | Honda     | Nagar  |  79800.00 | 1197.00 |
|    3 | MotorBike | Mumbai | 105600.00 | 2112.00 |
|    4 | TVS       | Nashik |  89700.00 | 1345.50 |
+------+-----------+--------+-----------+---------+
4 rows in set (0.05 sec)

mysql> update vehicle
    -> set price=65000 where vid=1;
Query OK, 1 row affected (0.18 sec)
Rows matched: 1  Changed: 1  Warnings: 0

mysql> select* from vehicle;
+------+-----------+--------+-----------+---------+
| vid  | vname     | city   | price     | regfee  |
+------+-----------+--------+-----------+---------+
|    1 | Hero      | Pune   |  65000.00 |  495.00 |
|    2 | Honda     | Nagar  |  79800.00 | 1197.00 |
|    3 | MotorBike | Mumbai | 105600.00 | 2112.00 |
|    4 | TVS       | Nashik |  89700.00 | 1345.50 |
+------+-----------+--------+-----------+---------+
4 rows in set (0.00 sec)

mysql> select* from vehicle_history;
+------+-------+-----------+-----------+------------+----------------+
| vid  | vname | old_price | new_price | chdate     | user           |
+------+-------+-----------+-----------+------------+----------------+
|    1 | Hero  |  49500.00 |  65000.00 | 2022-10-13 | root@localhost |
+------+-------+-----------+-----------+------------+----------------+
1 row in set (0.00 sec)







